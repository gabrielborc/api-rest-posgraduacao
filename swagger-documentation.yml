openapi: "3.0.1"
info:
  title: RentACar API
  version: v1
  description: API construída no padrão RESTFul para suprir toda a regra de negócio das aplicações de uma locadora de veículos
paths:
  /usuarios:
    summary: Tudo sobre os usuários
    get:
      tags:
      - usuarios
      summary: Obtem uma lista de usuários
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos usuários.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        default: 0
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Usuario"
    post:
      tags:
      - usuarios
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoUsuario"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo usuário criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
  /usuarios/{id}:
    summary: Detalhes de um usuário
    get:
      tags:
      - usuarios
      summary: Obtém um usuário específico
      parameters:
        - in: path
          name: id
          description: ID do usuário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do usuário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        404:
          description: Recurso não encontrado. O usuário especificado não foi localizado.
    put:
      tags:
      - usuarios
      summary: Atualiza um usuário específico
      parameters:
        - in: path
          name: id
          description: ID do usuário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do usuário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        404:
          description: Recurso não encontrado. O usuário especificado não foi localizado.
    delete:
      tags:
      - usuarios
      summary: Exclui um usuário específico
      parameters:
        - in: path
          name: id
          description: ID do usuário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O usuário especificado não foi localizado.
  /filiais:
    summary: Tudo sobre as filiais
    get:
      tags:
      - filiais
      summary: Obtem uma lista de filiais
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados das filiais.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        default: 0
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Filial"
    post:
      tags:
      - filiais
      summary: Cria uma nova filial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaFilial"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados da nova filial criada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filial"
  /filiais/{id}:
    summary: Detalhes de uma filial
    get:
      tags:
      - filiais
      summary: Obtém uma filial específica
      parameters:
        - in: path
          name: id
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados da filial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filial"
        404:
          description: Recurso não encontrado. A filial específicada não foi localizada.
    put:
      tags:
      - filiais
      summary: Atualiza uma filial específica
      parameters:
        - in: path
          name: id
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados da filial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filial"
        404:
          description: Recurso não encontrado. A filial especificada não foi localizada.
    delete:
      tags:
      - filiais
      summary: Exclui uma filial específica
      parameters:
        - in: path
          name: id
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. A filial especificada não foi localizada.
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoUsuario"
    NovoUsuario:
      properties:
        cliente:
          type: object
          properties:
            id:
              type: integer
              example: 1
        funcionario:
          type: object
          properties:
            id:
              type: integer
              example: 1
        login:
          type: string
          example: "antoniodonizete"
        senha:
          type: string
          example: "12345678910"
        tipoUsuario:
          type: string
          example: "normal"
        status:
          type: boolean
          example: true
    Filial:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovaFilial"
    NovaFilial:
      properties:
        descricao:
          type: string
          example: "Filial OestePaulista"
        rua:
          type: string
          example: "R. Maria Aparecida"
        numero:
          type: integer
          format: int32
          example: 153
        cidade:
          type: string
          example: "Presidente Prudente"
        uf:
          type: string
          example: "SP"
    Cargo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        descricao:
          type: string
    Funcionario:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        cargo:
          $ref: "#/components/schemas/Cargo"
        filial:
          $ref: "#/components/schemas/Filial"
        nome:
          type: string
        cnh:
          type: string
        tipoCnh:
          type: string
    FuncionarioEndereco:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        idFuncionario:
          type: integer
          format: int32
          default: 1
        rua:
          type: string
        numero:
          type: integer
          format: int32
        bairro:
          type: string
        cidade:
          type: string
        uf:
          type: string
    FuncionarioTelefone:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        idFuncionario:
          type: integer
          format: int32
          default: 1
        ddd:
          type: string
        numero:
          type: string
        tipo:
          type: string
    Cliente:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        nome:
          type: string
        cnh:
          type: string
        tipoCnh:
          type: string
    ClienteEndereco:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        idCliente:
          type: integer
          format: int32
          default: 1
        rua:
          type: string
        numero:
          type: integer
          format: int32
        bairro:
          type: string
        cidade:
          type: string
        uf:
          type: string
    ClienteTelefone:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        idCliente:
          type: integer
          format: int32
          default: 1
        ddd:
          type: string
        numero:
          type: string
        tipo:
          type: string
    Fabricante:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        descricao:
          type: string
    Modelo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        descricao:
          type: string
        fabricante:
          $ref: "#/components/schemas/Fabricante"
    Classe:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        descricao:
          type: string
    Tanque:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        descricao:
          type: string
    Carro:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        classe:
          $ref: "#/components/schemas/Classe"
        fabricante:
          $ref: "#/components/schemas/Fabricante"
        modelo:
          $ref: "#/components/schemas/Modelo"
        filial:
          $ref: "#/components/schemas/Filial"
    Preco:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        idFilial:
          type: integer
          format: int32
          default: 1
        classe:
          $ref: "#/components/schemas/Classe"
        valorDia:
          type: number
          format: double
        valorUmaSemana:
          type: number
          format: double
        valorDuasSemanas:
          type: number
          format: double
        valorMes:
          type: number
          format: double
        taxaDevolucao:
          type: number
          format: double
        percentualDesconto:
          type: integer
          format: int32
    Aluguel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          default: 1
        carro:
          $ref: "#/components/schemas/Carro"
        cliente:
          $ref: "#/components/schemas/Cliente"
        funcionario:
          $ref: "#/components/schemas/Funcionario"
        filialRetirada:
          $ref: "#/components/schemas/Filial"
        filialDevolucao:
          $ref: "#/components/schemas/Filial"
        dataRetirada:
          type: string
          format: date
        dataDevolucao:
          type: string
          format: date
        valor:
          type: number
          format: double
    AluguelRetirada:
      type: object
      properties:
        idAluguel:
          type: integer
          format: int32
        odometro:
          type: string
        dataEntrega:
          type: string
          format: date
    AluguelDevolucao:
      type: object
      properties:
        idAluguel:
          type: integer
          format: int32
        odometro:
          type: string
        dataEntrega:
          type: string
          format: date
        tanque:
          $ref: "#/components/schemas/Tanque"
    ApiResponseGetAll:
      type: object
      properties:
        meta:
          type: object
          properties:
            offset:
              type: integer
              format: int32
              default: 0
            limit:
              type: integer
              format: int32
              default: 0
            recordCount:
              type: integer
              format: int32
              default: 0