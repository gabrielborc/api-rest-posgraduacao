openapi: "3.0.1"
info:
  title: RentACar API
  version: v1
  description: API construída no padrão RESTFul para suprir toda a regra de negócio das aplicações de uma locadora de veículos
paths:
  /usuarios:
    summary: Tudo sobre os usuários
    get:
      tags:
      - usuarios
      summary: Obtem uma lista de usuários
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos usuários.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Usuario"
    post:
      tags:
      - usuarios
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoUsuario"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo usuário criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
  /usuarios/{id}:
    summary: Detalhes de um usuário
    get:
      tags:
      - usuarios
      summary: Obtém um usuário específico
      parameters:
        - in: path
          name: id
          description: ID do usuário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do usuário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        404:
          description: Recurso não encontrado. O usuário especificado não foi localizado.
    put:
      tags:
      - usuarios
      summary: Atualiza um usuário específico
      parameters:
        - in: path
          name: id
          description: ID do usuário
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoUsuario"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do usuário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        404:
          description: Recurso não encontrado. O usuário especificado não foi localizado.
    delete:
      tags:
      - usuarios
      summary: Exclui um usuário específico
      parameters:
        - in: path
          name: id
          description: ID do usuário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O usuário especificado não foi localizado.
  /filiais:
    summary: Tudo sobre as filiais
    get:
      tags:
      - filiais
      summary: Obtem uma lista de filiais
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados das filiais.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Filial"
    post:
      tags:
      - filiais
      summary: Cria uma nova filial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaFilial"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados da nova filial criada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filial"
  /filiais/{id}:
    summary: Detalhes de uma filial
    get:
      tags:
      - filiais
      summary: Obtém uma filial específica
      parameters:
        - in: path
          name: id
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados da filial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filial"
        404:
          description: Recurso não encontrado. A filial específicada não foi localizada.
    put:
      tags:
      - filiais
      summary: Atualiza uma filial específica
      parameters:
        - in: path
          name: id
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaFilial"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados da filial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filial"
        404:
          description: Recurso não encontrado. A filial especificada não foi localizada.
    delete:
      tags:
      - filiais
      summary: Exclui uma filial específica
      parameters:
        - in: path
          name: id
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. A filial especificada não foi localizada.
  /filiais/{filialId}/precos:
    summary: Tudo sobre os preços de uma filial
    get:
      tags:
      - filiais
      summary: Obtem uma lista de preços de uma filial
      parameters:
        - in: path
          name: filialId
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornada a lista de objetos que contém os dados dos preços da filial.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Preco"
    post:
      tags:
      - filiais
      summary: Cria um novo preço para a filial especificada
      parameters:
        - in: path
          name: filialId
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoPreco"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo preço criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Preco"
  /filiais/{filialId}/precos/{id}:
    summary: Detalhes de um preço de uma filial
    get:
      tags:
      - filiais
      summary: Obtém um preço específico de uma filial específica
      parameters:
        - in: path
          name: filialId
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do preço da filial
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o preço especificado da filial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Preco"
        404:
          description: Recurso não encontrado. A filial e/ou preço especificados não foram localizados.
    put:
      tags:
      - filiais
      summary: Atualiza o preço específico de uma filial específica
      parameters:
        - in: path
          name: filialId
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do preço da filial
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoPreco"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o preço atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Preco"
        404:
          description: Recurso não encontrado. A filial e/ou preço especificados não foram localizados.
    delete:
      tags:
      - filiais
      summary: Exclui um preço específico de uma filial especifica
      parameters:
        - in: path
          name: filialId
          description: ID da filial
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do preço da filial
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. A filial e/ou preço especificados não foram localizados.
  /cargos:
    summary: Tudo sobre os cargos
    get:
      tags:
      - cargos
      summary: Obtem uma lista de cargos
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos cargos.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Cargo"
    post:
      tags:
      - cargos
      summary: Cria um novo cargo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoCargo"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo cargo criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cargo"
  /cargos/{id}:
    summary: Detalhes de um cargo
    get:
      tags:
      - cargos
      summary: Obtém um cargo específico
      parameters:
        - in: path
          name: id
          description: ID do cargo
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do cargo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cargo"
        404:
          description: Recurso não encontrado. O cargo especificado não foi localizado.
    put:
      tags:
      - cargos
      summary: Atualiza um cargo específico
      parameters:
        - in: path
          name: id
          description: ID do cargo
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoCargo"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do cargo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cargo"
        404:
          description: Recurso não encontrado. O cargo especificado não foi localizado.
    delete:
      tags:
      - cargos
      summary: Exclui um cargo específico
      parameters:
        - in: path
          name: id
          description: ID do cargo
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O cargo especificado não foi localizado.
  /funcionarios:
    summary: Tudo sobre os funcionários
    get:
      tags:
      - funcionarios
      summary: Obtem uma lista de funcionários
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos funcionários.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Funcionario"
    post:
      tags:
      - funcionarios
      summary: Cria um novo funcionário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoFuncionario"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo funcionário criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
  /funcionarios/{id}:
    summary: Detalhes de um funcionário
    get:
      tags:
      - funcionarios
      summary: Obtém um funcionário específico
      parameters:
        - in: path
          name: id
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do funcionário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
        404:
          description: Recurso não encontrado. O funcionário especificado não foi localizado.
    put:
      tags:
      - funcionarios
      summary: Atualiza um funcionário específico
      parameters:
        - in: path
          name: id
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoFuncionario"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do funcionário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
        404:
          description: Recurso não encontrado. O funcionário especificado não foi localizado.
    delete:
      tags:
      - funcionarios
      summary: Exclui um funcionário específico
      parameters:
        - in: path
          name: id
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O funcionário especificado não foi localizado.
  /funcionarios/{funcionarioId}/enderecos:
    summary: Tudo sobre os endereços dos funcionários
    get:
      tags:
      - funcionarios
      summary: Obtem uma lista de endereços de um funcionário
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos endereços do funcionário.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/FuncionarioEndereco"
    post:
      tags:
      - funcionarios
      summary: Cria um novo endereço para o funcionário especificado
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoEnderecoFuncionario"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo endereço criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioEndereco"
  /funcionarios/{funcionarioId}/enderecos/{id}:
    summary: Detalhes de um endereço de um funcionário
    get:
      tags:
      - funcionarios
      summary: Obtém um endereço específico de um funcionário específico
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do endereço do funcionário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o endereço especificado do funcionário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioEndereco"
        404:
          description: Recurso não encontrado. O funcionário e/ou endereço especificados não foram localizados.
    put:
      tags:
      - funcionarios
      summary: Atualiza o endereço específico de um funcionário específico
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do endereço do funcionário
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoEnderecoFuncionario"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o endereço atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioEndereco"
        404:
          description: Recurso não encontrado. O funcionário e/ou endereço especificados não foram localizados.
    delete:
      tags:
      - funcionarios
      summary: Exclui um endereço específico de um funcionário específico
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do endereço do funcionário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O funcionário e/ou endereço especificados não foram localizados.
  /funcionarios/{funcionarioId}/telefones:
    summary: Tudo sobre os telefones dos funcionários
    get:
      tags:
      - funcionarios
      summary: Obtem uma lista de telefones de um funcionário
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os telefones do funcionário.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/FuncionarioTelefone"
    post:
      tags:
      - funcionarios
      summary: Cria um novo telefone para o funcionário especificado
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoTelefoneFuncionario"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo telefone criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioTelefone"
  /funcionarios/{funcionarioId}/telefones/{id}:
    summary: Detalhes de um telefone de um funcionário
    get:
      tags:
      - funcionarios
      summary: Obtém um telefone específico de um funcionário específico
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do telefone do funcionário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o telefone especificado do funcionário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioTelefone"
        404:
          description: Recurso não encontrado. O funcionário e/ou telefone especificados não foram localizados.
    put:
      tags:
      - funcionarios
      summary: Atualiza o telefone específico de um funcionário específico
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do telefone do funcionário
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoTelefoneFuncionario"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o telefone atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioTelefone"
        404:
          description: Recurso não encontrado. O funcionário e/ou telefone especificados não foram localizados.
    delete:
      tags:
      - funcionarios
      summary: Exclui um telefone específico de um funcionário específico
      parameters:
        - in: path
          name: funcionarioId
          description: ID do funcionário
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do telefone do funcionário
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O funcionário e/ou telefone especificados não foram localizados.
  /clientes:
    summary: Tudo sobre os clientes
    get:
      tags:
      - clientes
      summary: Obtem uma lista de clientes
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos clientes.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Cliente"
    post:
      tags:
      - clientes
      summary: Cria um novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoCliente"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo cliente criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
  /clientes/{id}:
    summary: Detalhes de um cliente
    get:
      tags:
      - clientes
      summary: Obtém um cliente específico
      parameters:
        - in: path
          name: id
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do cliente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
        404:
          description: Recurso não encontrado. O cliente especificado não foi localizado.
    put:
      tags:
      - clientes
      summary: Atualiza um cliente específico
      parameters:
        - in: path
          name: id
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do cliente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
        404:
          description: Recurso não encontrado. O cliente especificado não foi localizado.
    delete:
      tags:
      - clientes
      summary: Exclui um cliente específico
      parameters:
        - in: path
          name: id
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O cliente especificado não foi localizado.
  /clientes/{clienteId}/enderecos:
    summary: Tudo sobre os endereços dos clientes
    get:
      tags:
      - clientes
      summary: Obtem uma lista de endereços de um cliente
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos endereços do cliente.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/ClienteEndereco"
    post:
      tags:
      - clientes
      summary: Cria um novo endereço para o cliente especificado
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoEnderecoCliente"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo endereço criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteEndereco"
  /clientes/{clienteId}/enderecos/{id}:
    summary: Detalhes de um endereço de um cliente
    get:
      tags:
      - clientes
      summary: Obtém um endereço específico de um cliente específico
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do endereço do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o endereço especificado do cliente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteEndereco"
        404:
          description: Recurso não encontrado. O cliente e/ou endereço especificados não foram localizados.
    put:
      tags:
      - clientes
      summary: Atualiza o endereço específico de um cliente específico
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do endereço do cliente
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoEnderecoCliente"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o endereço atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteEndereco"
        404:
          description: Recurso não encontrado. O cliente e/ou endereço especificados não foram localizados.
    delete:
      tags:
      - clientes
      summary: Exclui um endereço específico de um cliente específico
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do endereço do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O cliente e/ou endereço especificados não foram localizados.
  /clientes/{clienteId}/telefones:
    summary: Tudo sobre os telefones dos clientes
    get:
      tags:
      - clientes
      summary: Obtem uma lista de telefones de um cliente
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os telefones do cliente.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/ClienteTelefone"
    post:
      tags:
      - clientes
      summary: Cria um novo telefone para o cliente especificado
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoTelefoneCliente"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo telefone criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteTelefone"
  /clientes/{clienteId}/telefones/{id}:
    summary: Detalhes de um telefone de um cliente
    get:
      tags:
      - clientes
      summary: Obtém um telefone específico de um cliente específico
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do telefone do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o telefone especificado do cliente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteTelefone"
        404:
          description: Recurso não encontrado. O cliente e/ou telefone especificados não foram localizados.
    put:
      tags:
      - clientes
      summary: Atualiza o telefone específico de um cliente específico
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do telefone do cliente
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoTelefoneCliente"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado o telefone atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteTelefone"
        404:
          description: Recurso não encontrado. O cliente e/ou telefone especificados não foram localizados.
    delete:
      tags:
      - clientes
      summary: Exclui um telefone específico de um cliente específico
      parameters:
        - in: path
          name: clienteId
          description: ID do cliente
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID do telefone do cliente
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O cliente e/ou telefone especificados não foram localizados.
  /fabricantes:
    summary: Tudo sobre os fabricantes
    get:
      tags:
      - fabricantes
      summary: Obtem uma lista de fabricantes
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos fabricantes.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Fabricante"
    post:
      tags:
      - fabricantes
      summary: Cria um novo fabricante
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoFabricante"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo fabricante criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fabricante"
  /fabricantes/{id}:
    summary: Detalhes de um fabricante
    get:
      tags:
      - fabricantes
      summary: Obtém um fabricante específico
      parameters:
        - in: path
          name: id
          description: ID do fabricante
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do fabricante.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fabricante"
        404:
          description: Recurso não encontrado. O fabricante especificado não foi localizado.
    put:
      tags:
      - fabricantes
      summary: Atualiza um fabricante específico
      parameters:
        - in: path
          name: id
          description: ID do fabricante
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoFabricante"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do fabricante.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fabricante"
        404:
          description: Recurso não encontrado. O fabricante especificado não foi localizado.
    delete:
      tags:
      - fabricantes
      summary: Exclui um fabricante específico
      parameters:
        - in: path
          name: id
          description: ID do fabricante
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O fabricante especificado não foi localizado.
  /modelos:
    summary: Tudo sobre os modelos
    get:
      tags:
      - modelos
      summary: Obtem uma lista de modelos
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos modelos.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Modelo"
    post:
      tags:
      - modelos
      summary: Cria um novo modelo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoModelo"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo modelo criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Modelo"
  /modelos/{id}:
    summary: Detalhes de um modelo
    get:
      tags:
      - modelos
      summary: Obtém um modelo específico
      parameters:
        - in: path
          name: id
          description: ID do modelo
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do modelo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Modelo"
        404:
          description: Recurso não encontrado. O modelo especificado não foi localizado.
    put:
      tags:
      - modelos
      summary: Atualiza um modelo específico
      parameters:
        - in: path
          name: id
          description: ID do modelo
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoModelo"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do modelo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Modelo"
        404:
          description: Recurso não encontrado. O modelo especificado não foi localizado.
    delete:
      tags:
      - modelos
      summary: Exclui um modelo específico
      parameters:
        - in: path
          name: id
          description: ID do modelo
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O modelo especificado não foi localizado.
  /classes:
    summary: Tudo sobre as classes
    get:
      tags:
      - classes
      summary: Obtem uma lista de classes
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados das classes.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Classe"
    post:
      tags:
      - classes
      summary: Cria uma nova classe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaClasse"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados da nova classe criada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Classe"
  /classes/{id}:
    summary: Detalhes de uma classe
    get:
      tags:
      - classes
      summary: Obtém uma classe específica
      parameters:
        - in: path
          name: id
          description: ID da classe
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados da classe.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Classe"
        404:
          description: Recurso não encontrado. A classe especificada não foi localizada.
    put:
      tags:
      - classes
      summary: Atualiza uma classe específica
      parameters:
        - in: path
          name: id
          description: ID da classe
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaClasse"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados da classe.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Classe"
        404:
          description: Recurso não encontrado. A classe especificada não foi localizada.
    delete:
      tags:
      - classes
      summary: Exclui uma classe específica
      parameters:
        - in: path
          name: id
          description: ID da classe
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. A classe especificada não foi localizada.
  /tanques:
    summary: Tudo sobre os tanques
    get:
      tags:
      - tanques
      summary: Obtem uma lista de tanques
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos tanques.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Tanque"
    post:
      tags:
      - tanques
      summary: Cria um novo tanque
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoTanque"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo tanque criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tanque"
  /tanques/{id}:
    summary: Detalhes de um tanque
    get:
      tags:
      - tanques
      summary: Obtém um tanque específico
      parameters:
        - in: path
          name: id
          description: ID do tanque
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do tanque.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tanque"
        404:
          description: Recurso não encontrado. O tanque especificado não foi localizado.
    put:
      tags:
      - tanques
      summary: Atualiza um tanque específico
      parameters:
        - in: path
          name: id
          description: ID do tanque
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoTanque"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do tanque.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tanque"
        404:
          description: Recurso não encontrado. O tanque especificado não foi localizado.
    delete:
      tags:
      - tanques
      summary: Exclui um tanque específico
      parameters:
        - in: path
          name: id
          description: ID do tanque
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O tanque especificado não foi localizado.
  /carros:
    summary: Tudo sobre os carros
    get:
      tags:
      - carros
      summary: Obtem uma lista de carros
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos carros.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Carro"
    post:
      tags:
      - carros
      summary: Cria um novo carro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoCarro"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo carro criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carro"
  /carros/{id}:
    summary: Detalhes de um carro
    get:
      tags:
      - carros
      summary: Obtém um carro específico
      parameters:
        - in: path
          name: id
          description: ID do carro
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do carro.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carro"
        404:
          description: Recurso não encontrado. O carro especificado não foi localizado.
    put:
      tags:
      - carros
      summary: Atualiza um carro específico
      parameters:
        - in: path
          name: id
          description: ID do carro
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoCarro"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do carro.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carro"
        404:
          description: Recurso não encontrado. O carro especificado não foi localizado.
    delete:
      tags:
      - carros
      summary: Exclui um carro específico
      parameters:
        - in: path
          name: id
          description: ID do carro
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O carro especificado não foi localizado.
  /alugueis:
    summary: Tudo sobre os aluguéis
    get:
      tags:
      - alugueis
      summary: Obtem uma lista de aluguéis
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados dos aluguéis.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Aluguel"
    post:
      tags:
      - alugueis
      summary: Cria um novo aluguel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoAluguel"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados do novo aluguel criado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Aluguel"
  /alugueis/{id}:
    summary: Detalhes de um aluguel
    get:
      tags:
      - alugueis
      summary: Obtém um aluguel específico
      parameters:
        - in: path
          name: id
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os dados do aluguel.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Aluguel"
        404:
          description: Recurso não encontrado. O aluguel especificado não foi localizado.
    put:
      tags:
      - alugueis
      summary: Atualiza um aluguel específico
      parameters:
        - in: path
          name: id
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovoAluguel"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado os novos dados do aluguel.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Aluguel"
        404:
          description: Recurso não encontrado. O aluguel especificado não foi localizado.
    delete:
      tags:
      - alugueis
      summary: Exclui um aluguel específico
      parameters:
        - in: path
          name: id
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O aluguel especificado não foi localizado.
  /alugueis/{aluguelId}/retiradas:
    summary: Tudo sobre as retiradas dos aluguéis
    get:
      tags:
      - alugueis
      summary: Obtem uma lista de retiradas de um aluguel
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados das retiradas de um aluguel.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/AluguelRetirada"
    post:
      tags:
      - alugueis
      summary: Cria uma nova retirada para um aluguel específico
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaRetiradaAluguel"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados da nova retirada criada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AluguelRetirada"
  /alugueis/{aluguelId}/retiradas/{id}:
    summary: Detalhes de uma retirada de um aluguel
    get:
      tags:
      - alugueis
      summary: Obtém uma retirada específica de um aluguel específico
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID da retirada do aluguel
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornada a retirada do aluguel.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AluguelRetirada"
        404:
          description: Recurso não encontrado. O aluguel e/ou retirada especificados não foram localizados.
    put:
      tags:
      - alugueis
      summary: Atualiza uma retirada específica de um aluguel específico
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID da retirada do aluguel
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaRetiradaAluguel"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornada a retirada atualizada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AluguelRetirada"
        404:
          description: Recurso não encontrado. O aluguel e/ou retirada especificados não foram localizados.
    delete:
      tags:
      - alugueis
      summary: Exclui uma retirada específica de um aluguel específico
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID da retirada do aluguel
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O aluguel e/ou retirada especificados não foram localizados.
  /alugueis/{aluguelId}/devolucoes:
    summary: Tudo sobre as devoluções dos aluguéis
    get:
      tags:
      - alugueis
      summary: Obtem uma lista de devoluções de um aluguel
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornado a lista de objetos que contém os dados das devoluções de um aluguel.
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    properties:
                      offset:
                        type: integer
                        format: int32
                        default: 0
                      limit:
                        type: integer
                        format: int32
                        default: 0
                      recordCount:
                        type: integer
                        format: int32
                        example: 1
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/AluguelDevolucao"
    post:
      tags:
      - alugueis
      summary: Cria uma nova devolução para um aluguel específico
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaDevolucaoAluguel"
      responses:
        201:
          description: Operação concluída com sucesso. Então é retornado os dados da nova devolução criada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AluguelDevolucao"
  /alugueis/{aluguelId}/devolucoes/{id}:
    summary: Detalhes de uma devolução de um aluguel
    get:
      tags:
      - alugueis
      summary: Obtém uma devolução específica de um aluguel específico
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID da devolução do aluguel
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornada a devolução do aluguel.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AluguelDevolucao"
        404:
          description: Recurso não encontrado. O aluguel e/ou devolução especificados não foram localizados.
    put:
      tags:
      - alugueis
      summary: Atualiza uma devolução específica de um aluguel específico
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID da devolução do aluguel
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NovaDevolucaoAluguel"
      responses:
        200:
          description: Operação concluída com sucesso. Então é retornada a devolução atualizada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AluguelDevolucao"
        404:
          description: Recurso não encontrado. O aluguel e/ou devolução especificados não foram localizados.
    delete:
      tags:
      - alugueis
      summary: Exclui uma devolução específica de um aluguel específico
      parameters:
        - in: path
          name: aluguelId
          description: ID do aluguel
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: id
          description: ID da devolução do aluguel
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Operação concluída com sucesso e nenhuma informação é retornada no response body.
        404:
          description: Recurso não encontrado. O aluguel e/ou devolução especificados não foram localizados.
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoUsuario"
    NovoUsuario:
      properties:
        cliente:
          type: object
          properties:
            id:
              type: integer
              example: 1
        funcionario:
          type: object
          properties:
            id:
              type: integer
              example: 1
        login:
          type: string
          example: "antoniodonizete"
        senha:
          type: string
          example: "12345678910"
        tipoUsuario:
          type: string
          example: "normal"
        status:
          type: boolean
          example: true
    Filial:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovaFilial"
    NovaFilial:
      properties:
        descricao:
          type: string
          example: "filial oestepaulista"
        rua:
          type: string
          example: "R. Maria Aparecida"
        numero:
          type: integer
          format: int32
          example: 153
        cidade:
          type: string
          example: "Presidente Prudente"
        uf:
          type: string
          example: "SP"
    Cargo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoCargo"
    NovoCargo:
      properties:
        descricao:
          type: string
          example: "desenvolvedor"
    Funcionario:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoFuncionario"
    NovoFuncionario:
      properties:
        cargo:
          type: object
          properties:
            id:
              type: integer
              example: 1
            descricao:
              type: string
              example: "motorista"
        filial:
          type: object
          properties:
            id:
              type: integer
              example: 1
            descricao:
              type: string
              example: "filial noroestepaulista"
        nome:
          type: string
          example: "Joaquim Pereira"
        cnh:
          type: string
          example: "35454874541"
        tipoCnh:
          type: string
          example: "AB"
    FuncionarioEndereco:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoEnderecoFuncionario"
    NovoEnderecoFuncionario:
      properties:
        idFuncionario:
          type: integer
          format: int32
          example: 1
        rua:
          type: string
          example: "R. Juaquim Fernandes"
        numero:
          type: integer
          format: int32
          example: 788
        bairro:
          type: string
          example: "Santa Luzia"
        cidade:
          type: string
          example: "Franca"
        uf:
          type: string
          example: "SP"
    FuncionarioTelefone:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoTelefoneFuncionario"
    NovoTelefoneFuncionario:
      properties:
        idFuncionario:
          type: integer
          format: int32
          example: 1
        ddd:
          type: string
          example: "015"
        numero:
          type: string
          example: "98484-9595"
        tipo:
          type: string
          example: "comercial"
    Cliente:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoCliente"
    NovoCliente:
      properties:
        nome:
          type: string
          example: "Laura Pereira"
        cnh:
          type: string
          example: "089464895"
        tipoCnh:
          type: string
          example: "AB"
    ClienteEndereco:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoEnderecoCliente"
    NovoEnderecoCliente:
      properties:
        idCliente:
          type: integer
          format: int32
          example: 1
        rua:
          type: string
          example: "R. Juaquim Fernandes"
        numero:
          type: integer
          format: int32
          example: 788
        bairro:
          type: string
          example: "Santa Luzia"
        cidade:
          type: string
          example: "Franca"
        uf:
          type: string
          example: "SP"
    ClienteTelefone:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoTelefoneCliente"
    NovoTelefoneCliente:
      properties:
        idCliente:
          type: integer
          format: int32
          example: 1
        ddd:
          type: string
          example: "015"
        numero:
          type: string
          example: "98484-9595"
        tipo:
          type: string
          example: "comercial"
    Fabricante:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoFabricante"
    NovoFabricante:
      properties:
        descricao:
          type: string
          example: "hyundai"
    Modelo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoModelo"
    NovoModelo:
      properties:
        descricao:
          type: string
          example: "hb20"
        fabricante:
          type: object
          properties:
            id:
              type: integer
              example: 1
            descricao:
              type: string
              example: "hyundai"
    Classe:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovaClasse"
    NovaClasse:
      properties:
        descricao:
          type: string
          example: "populares"
    Tanque:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoTanque"
    NovoTanque:
      properties:
        descricao:
          type: string
          example: "cheio"
    Carro:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoCarro"
    NovoCarro:
      properties:
        ano:
          type: integer
          format: int32
          example: 2010
        placa:
          type: string
          example: "QUW-6357"
        classe:
          type: object
          properties:
            id:
              type: integer
              example: 1
            descricao:
              type: string
              example: "subcompactos"
        fabricante:
          type: object
          properties:
            id:
              type: integer
              example: 1
            descricao:
              type: string
              example: "hyundai"
        modelo:
          type: object
          properties:
            id:
              type: integer
              example: 1
            descricao:
              type: string
              example: "hb20"
        filial:
          type: object
          properties:
            id:
              type: integer
              example: 1
            descricao:
              type: string
              example: "filial norestepaulista"
    Preco:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoPreco"
    NovoPreco:
      properties:
        idFilial:
          type: integer
          format: int32
          example: 1
        classe:
          type: object
          properties:
            id:
              type: integer
              example: 1
        valorDia:
          type: number
          format: double
          example: 57.0
        valorUmaSemana:
          type: number
          format: double
          example: 309.0
        valorDuasSemanas:
          type: number
          format: double
          example: 567.0
        valorMes:
          type: number
          format: double
          example: 1012.0
        taxaDevolucao:
          type: number
          format: double
          example: 37.0
        percentualDesconto:
          type: integer
          format: int32
          example: 0
    Aluguel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovoAluguel"
    NovoAluguel:
      properties:
        carro:
          type: object
          properties:
            id:
              type: integer
              example: 1
        cliente:
          type: object
          properties:
            id:
              type: integer
              example: 1
        funcionario:
          type: object
          properties:
            id:
              type: integer
              example: null
        filialRetirada:
          type: object
          properties:
            id:
              type: integer
              example: 1
        filialDevolucao:
          type: object
          properties:
            id:
              type: integer
              example: 1
        dataRetirada:
          type: string
          format: date
          example: "12/08/2019"
        dataDevolucao:
          type: string
          format: date
          example: "19/08/2019"
    AluguelRetirada:
      type: object
      properties:
        idAluguel:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovaRetiradaAluguel"
    NovaRetiradaAluguel:
      properties:
        odometro:
          type: string
          example: "10.500 KM"
        dataRetirada:
          type: string
          format: date
          example: "13/09/2019"
    AluguelDevolucao:
      type: object
      properties:
        idAluguel:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: "#/components/schemas/NovaDevolucaoAluguel"
    NovaDevolucaoAluguel:
      properties:
        odometro:
          type: string
          example: "10.632 KM"
        dataEntrega:
          type: string
          format: date
          example: "15/09/2019"
        tanque:
          type: object
          properties:
            id:
              type: integer
              example: 1